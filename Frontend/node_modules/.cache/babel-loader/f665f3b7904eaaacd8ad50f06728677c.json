{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\habib\\\\Desktop\\\\patisserie\\\\src\\\\pages\\\\AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  userList: [],\n  register: () => {},\n  login: () => {}\n});\n\nconst AuthProvider = props => {\n  _s();\n\n  const [userList, setUserList] = useState([]);\n\n  const register = user => {\n    setUserList([...userList, user]);\n  };\n\n  const login = _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    const user = userList.find(user => user.email === email);\n    if (!user) return console.log('Verify Email');\n    if (user.password !== password) return console.log('Verify password');\n    console.log('Logged in succefully');\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      userList,\n      register,\n      login\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AuthProvider, \"+jWea2O0sJVBb+7Y0afQXCjatJ0=\");\n\n_c = AuthProvider;\nexport { AuthContext };\nexport { AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/habib/Desktop/patisserie/src/pages/AuthContext.js"],"names":["createContext","useState","AuthContext","userList","register","login","AuthProvider","props","setUserList","user","email","password","find","console","log","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,gBAAGF,aAAa,CAAC;AAChCG,EAAAA,QAAQ,EAAE,EADsB;AAEhCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFc;AAGhCC,EAAAA,KAAK,EAAE,MAAM,CAAE;AAHiB,CAAD,CAAjC;;AAMA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACJ,QAAD,EAAWK,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMG,QAAQ,GAAIK,IAAD,IAAU;AACzBD,IAAAA,WAAW,CAAC,CAAC,GAAGL,QAAJ,EAAcM,IAAd,CAAD,CAAX;AACD,GAFD;;AAGA,QAAMJ,KAAK,GAAG,QAAyB;AAAA,QAAxB;AAAEK,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAwB;AACrC,UAAMF,IAAI,GAAGN,QAAQ,CAACS,IAAT,CAAeH,IAAD,IAAUA,IAAI,CAACC,KAAL,KAAeA,KAAvC,CAAb;AACA,QAAI,CAACD,IAAL,EAAW,OAAOI,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAP;AACX,QAAIL,IAAI,CAACE,QAAL,KAAkBA,QAAtB,EAAgC,OAAOE,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAAP;AAChCD,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,GALD;;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEX,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA;AAAtB,KAA7B;AAAA,cAA6DE,KAAK,CAACQ;AAAnE;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAdD;;GAAMT,Y;;KAAAA,Y;AAgBN,SAASJ,WAAT;AACA,SAASI,YAAT","sourcesContent":["import { createContext, useState } from 'react';\n\nconst AuthContext = createContext({\n  userList: [],\n  register: () => {},\n  login: () => {},\n});\n\nconst AuthProvider = (props) => {\n  const [userList, setUserList] = useState([]);\n\n  const register = (user) => {\n    setUserList([...userList, user]);\n  };\n  const login = ({ email, password }) => {\n    const user = userList.find((user) => user.email === email);\n    if (!user) return console.log('Verify Email');\n    if (user.password !== password) return console.log('Verify password');\n    console.log('Logged in succefully');\n  };\n\n  return <AuthContext.Provider value={{ userList, register, login }}>{props.children}</AuthContext.Provider>;\n};\n\nexport { AuthContext };\nexport { AuthProvider };"]},"metadata":{},"sourceType":"module"}