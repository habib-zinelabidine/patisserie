{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\naxios.defaults.baseURL = 'http://localhost:4000';\n\nconst useAxios = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchData = async _ref => {\n    let {\n      url,\n      data\n    } = _ref;\n\n    try {\n      setLoading(true);\n      const response = await axios.post(url, data);\n      return response;\n    } catch (error) {\n      setError(error);\n      console.dir(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return {\n    fetchData,\n    error,\n    loading\n  };\n};\n\n_s(useAxios, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\n\nexport default useAxios;","map":{"version":3,"sources":["C:/Users/habib/Desktop/patisserie/Frontend/src/hooks/useAxios.js"],"names":["useState","axios","defaults","baseURL","useAxios","loading","setLoading","error","setError","fetchData","url","data","response","post","console","dir"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,uBAAzB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMS,SAAS,GAAG,cAAuB;AAAA,QAAhB;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,KAAgB;;AACvC,QAAI;AACFL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,QAAQ,GAAE,MAAMX,KAAK,CAACY,IAAN,CAAWH,GAAX,EAAgBC,IAAhB,CAAtB;AACA,aAAOC,QAAP;AACD,KAJD,CAIE,OAAOL,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACD,KAPD,SAOQ;AAACD,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAkB;AAC5B,GATD;;AAWA,SAAO;AAACG,IAAAA,SAAD;AAAYF,IAAAA,KAAZ;AAAmBF,IAAAA;AAAnB,GAAP;AAGH,CAnBD;;GAAMD,Q;;AAqBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = 'http://localhost:4000';\r\n\r\nconst useAxios = () => {\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n  \r\n    const fetchData = async ({url, data}) => {\r\n      try {\r\n        setLoading(true);\r\n        const response= await axios.post(url, data);\r\n        return response;\r\n      } catch (error) {\r\n        setError(error);\r\n        console.dir(error);\r\n      }finally{setLoading(false)}\r\n    };\r\n  \r\n    return {fetchData, error, loading}\r\n\r\n\r\n}\r\n\r\nexport default useAxios;"]},"metadata":{},"sourceType":"module"}